[tool.pytest.ini_options]
minversion = "6.0"
# opts:
# `-n2` - parallelise over two threads (uses pytest-xdist)
# `--keep-baked-projects` - keep the cookiecutter projects that are generated in the tests (they will be stored in a temporary directory)

addopts = "-rav -nauto --keep-baked-projects"
testpaths = ["tests"]

[tool.ruff]
line-length = 100
preview = true # required to activate many pycodestyle errors and warnings as of 2024-03-13
exclude = [".*.egg-info", "requirements/**", "\\{\\{cookiecutter.repository_name\\}}\\}}"]

[tool.ruff.format]
skip-magic-trailing-comma = true
quote-style = "double"
indent-style = "space"
line-ending = "auto"
exclude = ["\\{\\{cookiecutter.repository_name\\}}\\}}"]

[tool.ruff.lint]
select = [
    # pycodestyle errors
    "E",
    # pycodestyle warnings
    "W",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # Docstrings
    "D"
]
ignore = [
    # here and below, rules are redundant with formatter, see
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "E501",
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300"
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

# Ignore `E402` (import violations) and `F401` (unused imports) in all `__init__.py` files
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"*.ipynb" = ["E402"]
"tests/*" = ["D"]


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 200
ignore-overlong-task-comments = true

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = []

[project]
keywords = ['cookiecutter', 'template', 'package']
name = "cookiecutter-pypackage"
authors = [{ name = "Bryn Pickering", email = "bryn.pickering@arup.com" }]
maintainers = []
description = 'Cookiecutter template for a Python package'
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
classifiers = [
    'Development Status :: 3 - Alpha',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'License :: OSI Approved :: BSD License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Topic :: Software Development',
]
dynamic = ["dependencies"]
version = "0.1.0"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements/dev.txt"] }

[project.urls]
repository = "https://github.com/arup-group/cookiecutter-pypackage"
documentation = "https://arup-group.github.io/cookiecutter-pypackage"
changelog = "https://github.com/arup-group/cookiecutter-pypackage/blob/main/CHANGELOG.md"
